//  栈：存储基本类型和函数调用上下文，内存分配和释放速度快。

//  堆：存储引用类型和闭包中的变量，内存分配和释放速度较慢，由垃圾回收机制管理。



let a = 10; // 基本类型，存储在栈上
let b = { name: "Bob" }; // 对象，存储在堆上，栈中存储引用
let c = [1, 2, 3]; // 数组，存储在堆上，栈中存储引用

function foo(x) {
  let y = 20; // 局部变量，存储在栈上
  return x + y;
}

foo(a); // 函数调用时，参数和局部变量存储在栈上